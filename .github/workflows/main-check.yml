name: Main check

on:
  pull_request:
    branches: [ main ]

jobs:
  code-style:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        ref: ${{ github.event.pull_request.head.ref }}    # for Google Java Format auto format commits
        fetch-depth: 0
    - name: Set up OpenJDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'zulu'
        cache: maven
    - name: Google Java Format enforcer, without imports
      uses: axel-op/googlejavaformat-action@v3
      with:
        commitMessage: Google Java Format formatting, without imports (MAIN)
        args: "--aosp --skip-sorting-imports --skip-removing-unused-imports --replace"
    - name: Google Java Format import structure fixer
      uses: axel-op/googlejavaformat-action@v3
      with:
        commitMessage: Google Java Format import ordering (MAIN)
        args: "--fix-imports-only --replace"

  verify-qourier:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
          fetch-depth: 0    # Shallow clones should be disabled for a better relevancy of analysis
    - name: Set up OpenJDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'zulu'
        cache: maven
    - name: Cache SonarCloud packages
      uses: actions/cache@v1
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar
    - name: Cache Maven packages
      uses: actions/cache@v1
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    - name: Setup RabbitMQ for integration testing
      run: cd Qourier/qourier_app && docker-compose --env-file .env.dummy up -d rabbitmq
    - name: Build and analyze
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}     # Needed to get PR information, if any
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: cd Qourier && mvn -B verify jacoco:prepare-agent jacoco:report org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=Afonso-Boto_TQS_LaundryDelivery -Pcoverage
    - name: Test report
      uses: dorny/test-reporter@v1
      if: always()
      with:
          name: Maven tests
          path: Qourier/qourier_app/target/surefire-reports/TEST-*.xml
          reporter: java-junit
          fail-on-error: true

  verify-laundryathome:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
      with:
          fetch-depth: 0    # Shallow clones should be disabled for a better relevancy of analysis
    - name: Set up OpenJDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'zulu'
        cache: maven
    - name: Cache SonarCloud packages
      uses: actions/cache@v1
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar
    - name: Cache Maven packages
      uses: actions/cache@v1
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    - name: Build and analyze
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}     # Needed to get PR information, if any
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: cd LaundryAtHome/LaundryPlatform && mvn -B verify jacoco:prepare-agent jacoco:report org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=Afonso-Boto_TQS_LaundryDelivery -Pcoverage
    - name: Test report
      uses: dorny/test-reporter@v1
      if: always()
      with:
          name: Maven tests
          path: LaundryAtHome/LaundryPlatform/target/surefire-reports/TEST-*.xml
          reporter: java-junit
          fail-on-error: true
